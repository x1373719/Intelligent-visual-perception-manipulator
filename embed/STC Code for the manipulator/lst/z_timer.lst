C51 COMPILER V9.60.0.0   Z_TIMER                                                           07/09/2022 18:24:18 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE Z_TIMER
OBJECT MODULE PLACED IN .\obj\z_timer.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE src\z_timer.c LARGE OPTIMIZE(8,SPEED) BROWSE ORDER INCDIR(.\src) DEBUG O
                    -BJECTEXTEND PRINT(.\lst\z_timer.lst) TABS(2) OBJECT(.\obj\z_timer.obj)

line level    source

   1          #include <stdio.h>
   2          #include "z_timer.h"
   3          #include "z_global.h"
   4          #include "z_gpio.h"
   5          
   6          #define FOSC 22118400L  
   7          static u32 systick_ms = 0;
   8          
   9          void timer0_init(void) {
  10   1        AUXR |= 0x80;   //定时器时钟1T模式
  11   1        TMOD &= 0xF0;   //设置定时器模式
  12   1        TMOD |= 0x01;   //设置定时器模式
  13   1        TL0 = 0XAA;     //设置定时初值
  14   1        TH0 = 0XAA;     //设置定时初值
  15   1        TF0 = 0;      //清除TF0标志
  16   1        TR0 = 1;      //定时器0开始计时
  17   1        ET0 = 1;      //打开中断
  18   1        EA =  1;
  19   1      }
  20          
  21          
  22          
  23          void timer1_init(void) {
  24   1        AUXR |= 0x40;   //定时器时钟1T模式
  25   1        TMOD &= 0x0F;   //设置定时器模式
  26   1        TL1 = 0;    //设置定时初值
  27   1        TH1 = 0;    //设置定时初值
  28   1        TF1 = 0;    //清除TF1标志
  29   1        TR1 = 1;    //定时器1开始计时
  30   1        ET1 = 1;    //打开中断
  31   1        EA  = 1;
  32   1      }
  33          
  34          void timer3_init(void)    //1毫秒@22.1184MHz
  35          {
  36   1        T4T3M |= 0x02;    //定时器时钟1T模式
  37   1        T3L = 0x9A;     //设置定时初值
  38   1        T3H = 0xA9;     //设置定时初值
  39   1        T4T3M |= 0x08;    //定时器3开始计时
  40   1        IE2 |= 0X20;    //打开外部中断
  41   1        EA  = 1;      //总开关
  42   1      }
  43          
  44          
  45          void timer0_reset(int t_us) {
  46   1        //本来应该x22.1184 但由于单片机用的内部晶振，有一定误差，调整到下面这个值 
             -频率差不多50HZ
  47   1        TL0 = (int)(65535-20.7*t_us);
  48   1        TH0 = (int)(65535-20.7*t_us) >> 8;
  49   1      }
  50          
  51          u32 millis(void) {
  52   1        return systick_ms;
  53   1      }
C51 COMPILER V9.60.0.0   Z_TIMER                                                           07/09/2022 18:24:18 PAGE 2   

  54          
  55          float abs_float(float value) {
  56   1        if(value>0) {
  57   2          return value;
  58   2        }
  59   1        return (-value);
  60   1      }
  61          
  62          void duoji_inc_handle(u8 index) { 
  63   1        int aim_temp;
  64   1        
  65   1        if(duoji_doing[index].inc != 0) {
  66   2          
  67   2          aim_temp = duoji_doing[index].aim;
  68   2          
  69   2          if(aim_temp > 2490){
  70   3            aim_temp = 2490;
  71   3          } else if(aim_temp < 500) {
  72   3            aim_temp = 500;
  73   3          }
  74   2        
  75   2          if(abs_float(aim_temp - duoji_doing[index].cur) <= abs_float(duoji_doing[index].inc + duoji_doing[index]
             -.inc)) {
  76   3            duoji_doing[index].cur = aim_temp;
  77   3            duoji_doing[index].inc = 0;
  78   3          } else {
  79   3            duoji_doing[index].cur += duoji_doing[index].inc;
  80   3          }
  81   2        }
  82   1      }
  83          
  84          void T0_IRQ(void) interrupt 1 {
  85   1        static volatile u8 flag = 0, count=0;
  86   1        int temp;
  87   1      
  88   1        if(duoji_index1 >= 8) {
  89   2          duoji_index1 = 0;
  90   2        }
  91   1          
  92   1        if(!flag) {
  93   2          //有偏差的时候就发送PWM脉冲
  94   2          if(duoji_doing[duoji_index1].inc || millis() < 3000){
  95   3            timer0_reset((unsigned int)(duoji_doing[duoji_index1].cur));
  96   3            dj_io_set(duoji_index1, 1);
  97   3            duoji_inc_handle(duoji_index1);
  98   3            count = 0;
  99   3          } else {
 100   3            count++;
 101   3            if(count < 3) {
 102   4              timer0_reset((unsigned int)(duoji_doing[duoji_index1].cur));
 103   4              dj_io_set(duoji_index1, 1);
 104   4              duoji_inc_handle(duoji_index1);
 105   4            } else {
 106   4              count = 3;
 107   4            }
 108   3          }
 109   2          
 110   2        } else {
 111   2          temp = 2500 - (unsigned int)(duoji_doing[duoji_index1].cur);
 112   2          if(temp < 20)temp = 20;
 113   2          timer0_reset(temp);
 114   2          dj_io_set(duoji_index1, 0);
C51 COMPILER V9.60.0.0   Z_TIMER                                                           07/09/2022 18:24:18 PAGE 3   

 115   2          duoji_index1 ++;
 116   2        }
 117   1        flag = !flag;
 118   1      }
 119          
 120          //超声波定时中断处理
 121          void T1_IRQ(void) interrupt 3{
 122   1        //timer0_reset(1000);
 123   1        //systick_ms ++;
 124   1        TL1 = 0;    //设置定时初值
 125   1        TH1 = 0;    //设置定时初值
 126   1        csb_cnt++;
 127   1      }
 128          
 129          void T3_IRQ(void) interrupt 19{
 130   1        systick_ms ++;
 131   1      }
 132          
 133          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1002    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      6       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
