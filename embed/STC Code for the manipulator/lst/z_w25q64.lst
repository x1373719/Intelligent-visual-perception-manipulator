C51 COMPILER V9.60.0.0   Z_W25Q64                                                          07/09/2022 18:24:19 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE Z_W25Q64
OBJECT MODULE PLACED IN .\obj\z_w25q64.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE src\z_w25q64.c LARGE OPTIMIZE(8,SPEED) BROWSE ORDER INCDIR(.\src) DEBUG 
                    -OBJECTEXTEND PRINT(.\lst\z_w25q64.lst) TABS(2) OBJECT(.\obj\z_w25q64.obj)

line level    source

   1          #include "z_w25q64.h"
   2          #include <intrins.h>
   3          /****************************************************************************
   4            * @笔者 ： W
   5            * @日期 ： 2019年12月02日
   6            * @所属 ： 杭州众灵科技
   7            * @论坛 ： www.ZL-robot.com
   8            * @功能 ： 存放FLASH相关的函数
   9            * @函数列表：
  10            * 1.  void  SpiFlashInit(void); -- 初始化SPI
  11            * 2.  void  SpiSetSpeedLow(void); -- SPI设置为低时钟频率 CPU_CLK/128
  12            * 3.  void  SpiSetSpeedHigh(void); -- SPI设置为高时钟频率 CPU_CLK/4
  13            * 4.  u8    SpiWriteRead(u8 d); -- SPI读写数据
  14            * 5.  u16   SpiFlashReadID(void); -- 读取FLASH ID
  15            * 6.  u8    SpiFlashReadSR(void); -- 读取状态寄存器 
  16            * 7.  void  SpiFlashWriteSR(u8 sr); -- 写状态寄存器
  17            * 8.  void  SpiFlashWriteEnable(void); -- 写使能 
  18            * 9.  void  SpiFlashWriteDisable(void); -- 写禁止
  19            * 10. char  SpiFlashReadChar(u32 ReadAddr); -- 读取flash
  20            * 11. void  SpiFlashRead(u8* pBuffer,u32 ReadAddr,u16 NumByteToRead); -- 读取flash
  21            * 12. void  SpiFlashWrite(u8* pBuffer,u32 WriteAddr,u16 NumByteToWrite); -- 写入flash
  22            * 13. void  SpiFlashWriteChar(char tmp,u32 WriteAddr); -- 单字节写入flash
  23            * 14. void  SpiFlashWritePage(u8* pBuffer,u32 WriteAddr,u16 NumByteToWrite); -- 单页写入flash
  24            * 15. void  SpiFlashWriteSector(u8* pBuffer,u32 WriteAddr,u16 NumByteToWrite); -- 单扇区写入flash
  25            * 16. void  SpiFlashWriteNoCheck(u8* pBuffer,u32 WriteAddr,u16 NumByteToWrite); -- 无检验写入flash
  26            * 17. void  SpiFlashEraseSector(u32 Dst_Addr); -- 扇区擦除
  27            * 18. void  SpiFlashEraseChip(void); -- 整片擦除
  28            * 19. void  SpiFlashWaitBusy(void); -- 等待空闲
  29            * 20. void  SpiFlashPowerDown(void); -- 进入掉电模式
  30            * 21. void  SpiFlashWakeUp(void); -- 唤醒
  31           ****************************************************************************/
  32          
  33          #define  PIN0 0x01  //0000,0001
  34          #define  PIN1 0x02  //0000,0010
  35          #define  PIN2 0x04  //0000,0100
  36          #define  PIN3 0x08  //0000,1000
  37          #define  PIN4 0x10  //0001,0000
  38          #define  PIN5 0x20  //0010,0000
  39          #define  PIN6 0x40  //0100,0000
  40          #define  PIN7 0x80  //1000,0000
  41          
  42          void _delay_us(u16 t) {
  43   1        while(t--) {
  44   2          _nop_();
  45   2          _nop_();
  46   2          _nop_();
  47   2        }
  48   1      }
  49          
  50          
  51          /***********************************************
  52            函数名称：SpiFlashInit() 
  53            功能介绍：初始化SPI FLASH的IO口
  54            函数参数：无
C51 COMPILER V9.60.0.0   Z_W25Q64                                                          07/09/2022 18:24:19 PAGE 2   

  55            返回值：  无
  56           ***********************************************/
  57          void SpiFlashInit(void) {  
  58   1        P2M1|=  PIN2 ;
  59   1        P2M0&=~(PIN2);
  60   1        P2M1&=~((PIN1)|(PIN3)|(PIN4));
  61   1        P2M0|= ((PIN1)|(PIN3)|(PIN4));
  62   1        
  63   1        P_SW1 &= SPI_S1_1;                    //CS P2.4 SCLK P2.1
  64   1        P_SW1 |= SPI_S1_2;                    //MOSI P2.3 MISO P2.2 
  65   1        SPDAT  = 0;                           //清空数据寄存器
  66   1        SPSTAT = SPIF|WCOL;                   //清空SPI状态寄存器
  67   1        SPCTL  = SPEN|MSTR|SP_CLK0|SSIG;      //SPI设置为主机模式
  68   1      } 
  69          
  70          /***********************************************
  71            函数名称：SpiSetSpeedLow() 
  72            功能介绍：SPI设置为低时钟频率 CPU_CLK/128
  73            函数参数：无
  74            返回值：  无
  75           ***********************************************/
  76          void SpiSetSpeedLow(void) {
  77   1        SPCTL  &=~SP_CLK3; 
  78   1        SPCTL |=SP_CLK3;
  79   1      }
  80          
  81          /***********************************************
  82            函数名称：SpiSetSpeedHigh() 
  83            功能介绍：SPI设置为高时钟频率 CPU_CLK/4
  84            函数参数：无
  85            返回值：  无
  86           ***********************************************/
  87          void SpiSetSpeedHigh(void) {
  88   1        SPCTL  &=~SP_CLK3; 
  89   1        SPCTL  |=SP_CLK0;
  90   1      }
  91          
  92          /***********************************************
  93            函数名称：SpiWriteRead() 
  94            功能介绍：SPI读写数据
  95            函数参数：d 发送的数据
  96            返回值：  SPDAT 返回字节数据
  97           ***********************************************/
  98          u8 SpiWriteRead(u8 d) {
  99   1        SPDAT = d;                            //触发SPI发送数据
 100   1        while (!(SPSTAT & SPIF));             //等待发送完成
 101   1        SPSTAT = SPIF | WCOL;                 //清除SPI状态位
 102   1        return SPDAT;                         //返回SPI数据
 103   1      }
 104          
 105          /***********************************************
 106            函数名称：SpiFlashReadID() 
 107            功能介绍：读取芯片ID
 108            函数参数：无
 109            返回值：  0XEF13,表示芯片型号为W25Q80
 110                      0XEF14,表示芯片型号为W25Q16
 111                      0XEF15,表示芯片型号为W25Q32
 112                      0XEF16,表示芯片型号为W25Q64
 113           ***********************************************/
 114          u16 SpiFlashReadID(void) {
 115   1        u16 Temp = 0;
 116   1        SPI_FLASH_CS(0);
C51 COMPILER V9.60.0.0   Z_W25Q64                                                          07/09/2022 18:24:19 PAGE 3   

 117   1        SpiWriteRead(W25X_ManufactDeviceID);  //发送读取ID命令
 118   1        SpiWriteRead(0x00);
 119   1        SpiWriteRead(0x00);
 120   1        SpiWriteRead(0x00);
 121   1        Temp|=SpiWriteRead(0xFF)<<8;
 122   1        Temp|=SpiWriteRead(0xFF);
 123   1        SPI_FLASH_CS(1);
 124   1        return Temp;
 125   1      }
 126          
 127          /***********************************************
 128            函数名称：SpiFlashReadSR() 
 129            功能介绍：读SPI_FLASH的状态寄存器
 130            函数参数：无
 131            返回值：  读取的SPI_FLASH的状态寄存器值
 132                      BIT   7   6   5   4   3   2   1   0
 133                            SPR RV  TB  BP2 BP1 BP0 WEL BUSY
 134                      SPR:默认0,状态寄存器保护位,配合WP使用
 135                      TB,BP2,BP1,BP0:FLASH区域写保护设置
 136                      WEL:写使能锁定
 137                      BUSY:忙标记位(1：忙 0：空闲)
 138           ***********************************************/
 139          u8 SpiFlashReadSR(void) {  
 140   1        u8 rt=0;   
 141   1        SPI_FLASH_CS(0);                      //使能器件   
 142   1        SpiWriteRead(W25X_ReadStatusReg);     //发送读取状态寄存器命令    
 143   1        rt=SpiWriteRead(0Xff);                //读取一个字节  
 144   1        SPI_FLASH_CS(1);                      //取消片选     
 145   1        return rt;   
 146   1      }
 147          
 148          /***********************************************
 149            函数名称：SpiFlashWriteSR() 
 150            功能介绍：写SPI_FLASH的状态寄存器
 151            函数参数：写入的SPI_FLASH的状态寄存器值
 152            返回值：  无
 153                      BIT   7   6   5   4   3   2   1   0
 154                            SPR RV  TB  BP2 BP1 BP0 WEL BUSY
 155                      只有SPR,TB,BP2,BP1,BP0(bit 7,5,4,3,2)可以写
 156           ***********************************************/
 157          void SpiFlashWriteSR(u8 sr) {   
 158   1        SPI_FLASH_CS(0);                      //使能器件   
 159   1        SpiWriteRead(W25X_WriteStatusReg);    //发送写取状态寄存器命令    
 160   1        SpiWriteRead(sr);                     //写入一个字节  
 161   1        SPI_FLASH_CS(1);                      //取消片选            
 162   1      }   
 163          
 164          /***********************************************
 165            函数名称：SpiFlashWriteEnable() 
 166            功能介绍：SPI_FLASH写使能，WEL置位
 167            函数参数：无
 168            返回值：  无
 169           ***********************************************/
 170          void SpiFlashWriteEnable(void) {
 171   1        SPI_FLASH_CS(0);                      //使能器件   
 172   1        SpiWriteRead(W25X_WriteEnable);       //发送写使能  
 173   1        SPI_FLASH_CS(1);                      //取消片选            
 174   1      } 
 175          
 176          /***********************************************
 177            函数名称：SpiFlashWriteDisable() 
 178            功能介绍：SPI_FLASH写禁止，将WEL清零
C51 COMPILER V9.60.0.0   Z_W25Q64                                                          07/09/2022 18:24:19 PAGE 4   

 179            函数参数：无
 180            返回值：  无
 181           ***********************************************/
 182          void SpiFlashWriteDisable(void) {  
 183   1        SPI_FLASH_CS(0);                      //使能器件   
 184   1        SpiWriteRead(W25X_WriteDisable);      //发送写禁止指令    
 185   1        SPI_FLASH_CS(1);                      //取消片选            
 186   1      }   
 187          
 188          /***********************************************
 189            函数名称：SpiFlashRead() 
 190            功能介绍：SPI读取1个字节的数据
 191            函数参数：ReadAddr       -开始读取的地址(24bit)
 192            返回值：  无
 193           ***********************************************/
 194          char SpiFlashReadChar(u32 ReadAddr) { 
 195   1        static char tmp;
 196   1        SPI_FLASH_CS(0);                      //使能器件   
 197   1        SpiWriteRead(W25X_ReadData);          //发送读取命令   
 198   1        SpiWriteRead((u8)((ReadAddr)>>16));   //发送24bit地址    
 199   1        SpiWriteRead((u8)((ReadAddr)>>8));  
 200   1        SpiWriteRead((u8)(ReadAddr&0xFF));   
 201   1        tmp=SpiWriteRead(0XFF);       //读数  
 202   1        SPI_FLASH_CS(1);
 203   1        return tmp;
 204   1      }  
 205          
 206          /***********************************************
 207            函数名称：SpiFlashRead() 
 208            功能介绍：读SPI_FLASH
 209            函数参数：pBuffer        -数据存储区
 210                      ReadAddr       -开始读取的地址(24bit)
 211                      NumByteToRead  -要读取的字节数(最大65535)
 212            返回值：  无
 213           ***********************************************/
 214          void SpiFlashRead(u8* pBuffer,u32 ReadAddr,u16 NumByteToRead) { 
 215   1        u16 i;
 216   1        SPI_FLASH_CS(0);                      //使能器件   
 217   1        SpiWriteRead(W25X_ReadData);          //发送读取命令   
 218   1        SpiWriteRead((u8)((ReadAddr)>>16));   //发送24bit地址    
 219   1        SpiWriteRead((u8)((ReadAddr)>>8));  
 220   1        SpiWriteRead((u8)(ReadAddr&0xFF));   
 221   1        for(i=0;i<NumByteToRead;i++){ 
 222   2          pBuffer[i]=SpiWriteRead(0XFF);      //循环读数  
 223   2        }
 224   1        SPI_FLASH_CS(1);                      
 225   1      }  
 226          
 227          /***********************************************
 228            函数名称：SpiFlashWrite() 
 229            功能介绍：写SPI_FLASH
 230            函数参数：pBuffer        -数据存储区
 231                      WriteAddr      -开始写入的地址(24bit)
 232                      NumByteToWrite -要读取的字节数(最大65535)
 233            返回值：  无
 234           ***********************************************/
 235          void SpiFlashWrite(u8* pBuffer,u32 WriteAddr,u16 NumByteToWrite)   
 236          { 
 237   1        u32 sector = 0;
 238   1        u16 sectorremain;
 239   1        
 240   1        sectorremain=4096-WriteAddr%4096;     //单扇区剩余的字节数         
C51 COMPILER V9.60.0.0   Z_W25Q64                                                          07/09/2022 18:24:19 PAGE 5   

 241   1        if(NumByteToWrite<=sectorremain)
 242   1          sectorremain=NumByteToWrite;
 243   1        while(1){    
 244   2          sector=WriteAddr>>12;               //扇区地址 
 245   2          SpiFlashEraseSector(sector);        //擦除这个扇区
 246   2          SpiFlashWriteSector(pBuffer,WriteAddr,sectorremain);
 247   2          if(NumByteToWrite==sectorremain)
 248   2            break;                            //写入结束了
 249   2          else{
 250   3            pBuffer         += sectorremain;
 251   3            WriteAddr       += sectorremain;  
 252   3            NumByteToWrite  -= sectorremain;  //减去已经写入了的字节数
 253   3            if(NumByteToWrite>4096)
 254   3              sectorremain=4096;              //一次可以写入4096个字节
 255   3            else 
 256   3              sectorremain=NumByteToWrite;     //不够4096个字节了
 257   3          }
 258   2        }     
 259   1      }
 260          
 261          /***********************************************
 262            函数名称：SpiFlashWriteChar() 
 263            功能介绍：SPI写入1个字节的数据
 264            函数参数：tmp             -数据
 265                      WriteAddr      -开始写入的地址(24bit)
 266            返回值：  无
 267           ***********************************************/
 268          void SpiFlashWriteChar(char tmp,u32 WriteAddr) {
 269   1        SpiFlashWriteEnable();
 270   1        SPI_FLASH_CS(0);                      //使能器件
 271   1        SpiWriteRead(W25X_PageProgram);       //发送写页命令   
 272   1        SpiWriteRead((u8)((WriteAddr)>>16));  //发送24bit地址    
 273   1        SpiWriteRead((u8)((WriteAddr)>>8));   
 274   1        SpiWriteRead((u8)WriteAddr);
 275   1        SpiWriteRead(tmp);                    //写数  
 276   1        SPI_FLASH_CS(1);                      //取消片选 
 277   1        SpiFlashWaitBusy();                   //等待写入结束
 278   1        //uart1_send_str("Byte has been written.\r\n");
 279   1      } 
 280          
 281          /***********************************************
 282            函数名称：SpiFlashWritePage() 
 283            功能介绍：SPI在一页内写入少于256个字节的数据
 284            函数参数：pBuffer        -数据存储区
 285                      WriteAddr      -开始写入的地址(24bit)
 286                      NumByteToWrite -要写入的字节数(最大256),该数不应该超过该页的剩余字节数
 287            返回值：  无
 288           ***********************************************/
 289          void SpiFlashWritePage(u8* pBuffer,u32 WriteAddr,u16 NumByteToWrite) {
 290   1        u16 pageremain, i;  
 291   1        pageremain=256-WriteAddr%256;         //单页剩余的字节数          
 292   1        if(NumByteToWrite>pageremain){
 293   2          NumByteToWrite=pageremain;
 294   2          //uart1_send_str((u8 *)"There are not enough writable bytes left in this page!\r\n");
 295   2        }
 296   1        SpiFlashWriteEnable();                //写使能 
 297   1        SPI_FLASH_CS(0);                      //使能器件
 298   1        SpiWriteRead(W25X_PageProgram);       //发送写页命令   
 299   1        SpiWriteRead((u8)((WriteAddr)>>16));  //发送24bit地址    
 300   1        SpiWriteRead((u8)((WriteAddr)>>8));   
 301   1        SpiWriteRead((u8)WriteAddr);
 302   1      
C51 COMPILER V9.60.0.0   Z_W25Q64                                                          07/09/2022 18:24:19 PAGE 6   

 303   1      /*******全局变量外部声明*******/
 304   1        for(i=0;i<NumByteToWrite;i++){ 
 305   2          SpiWriteRead(pBuffer[i]);           //循环写数  
 306   2        }
 307   1        SPI_FLASH_CS(1);                      //取消片选 
 308   1        SpiFlashWaitBusy();                   //等待写入结束
 309   1        //uart1_send_int(NumByteToWrite);
 310   1        //uart1_send_str(" bytes have been written.\r\n");
 311   1      } 
 312          
 313          /***********************************************
 314            函数名称：SpiFlashWriteSector() 
 315            功能介绍：SPI在一扇区内写入少于4096个字节的数据
 316            函数参数：pBuffer        -数据存储区
 317                      WriteAddr      -开始写入的地址(24bit)
 318                      NumByteToWrite -要写入的字节数(最大4096),该数不应该超过该扇区的剩余字节数
 319            返回值：  无
 320           ***********************************************/
 321          void SpiFlashWriteSector(u8* pBuffer,u32 WriteAddr,u16 NumByteToWrite) {
 322   1        u16 sectorremain;    
 323   1        sectorremain=4096-WriteAddr%4096;         //单扇区剩余的字节数         
 324   1        if(NumByteToWrite>sectorremain){
 325   2          NumByteToWrite=sectorremain;
 326   2          //uart1_send_str((u8 *)"There are not enough writable bytes left in this sector!\r\n");
 327   2        }
 328   1        SpiFlashWriteNoCheck(pBuffer,WriteAddr,NumByteToWrite);
 329   1      } 
 330          
 331          /***********************************************
 332            函数名称：SpiFlashWriteNoCheck() 
 333            功能介绍：无检验写SPI_FLASH
 334            函数参数：pBuffer        -数据存储区
 335                      WriteAddr      -开始写入的地址(24bit)
 336                      NumByteToWrite -要写入的字节数(最大65535 1块 16扇区 256页)
 337            返回值：  无
 338           ***********************************************/
 339          void SpiFlashWriteNoCheck(u8* pBuffer,u32 WriteAddr,u16 NumByteToWrite) {            
 340   1        u16 pageremain;    
 341   1        pageremain=256-WriteAddr%256;         //单页剩余的字节数          
 342   1        if(NumByteToWrite<=pageremain)
 343   1          pageremain=NumByteToWrite;
 344   1        while(1){    
 345   2          SpiFlashWritePage(pBuffer,WriteAddr,pageremain);
 346   2          if(NumByteToWrite==pageremain)
 347   2            break;                            //写入结束了
 348   2          else{
 349   3            pBuffer         += pageremain;
 350   3            WriteAddr       += pageremain;  
 351   3            NumByteToWrite  -= pageremain;    //减去已经写入了的字节数
 352   3            if(NumByteToWrite>256)
 353   3              pageremain=256;                 //一次可以写入256个字节
 354   3            else 
 355   3              pageremain=NumByteToWrite;      //不够256个字节了
 356   3          }
 357   2        }     
 358   1      } 
 359          
 360          /***********************************************
 361            函数名称：SpiFlashEraseSector() 
 362            功能介绍：擦除一个扇区 最少150毫秒
 363            函数参数：Dst_Addr  -扇区地址 (最大2047)
 364            返回值：  无
C51 COMPILER V9.60.0.0   Z_W25Q64                                                          07/09/2022 18:24:19 PAGE 7   

 365           ***********************************************/
 366          void SpiFlashEraseSector(u32 Dst_Addr) {  
 367   1        Dst_Addr <<= 12;
 368   1        SpiFlashWriteEnable();                //SET WEL    
 369   1        SpiFlashWaitBusy();   
 370   1        SPI_FLASH_CS(0);                      //使能器件   
 371   1        SpiWriteRead(W25X_SectorErase);       //发送扇区擦除指令 
 372   1        SpiWriteRead((u8)((Dst_Addr)>>16));   //发送24bit地址    
 373   1        SpiWriteRead((u8)((Dst_Addr)>>8));   
 374   1        SpiWriteRead((u8)Dst_Addr);  
 375   1        SPI_FLASH_CS(1);                      //取消片选            
 376   1        SpiFlashWaitBusy();                   //等待擦除完成
 377   1        //uart1_send_str("Sector has been erased.\r\n");
 378   1      }
 379          
 380          /***********************************************
 381            函数名称：SpiFlashEraseChip() 
 382            功能介绍：擦除整个芯片
 383            函数参数：无
 384            返回值：  无
 385           ***********************************************/
 386          void SpiFlashEraseChip(void) {                                   
 387   1        SpiFlashWriteEnable();                //SET WEL 
 388   1        SpiFlashWaitBusy();   
 389   1        SPI_FLASH_CS(0);                      //使能器件   
 390   1        SpiWriteRead(W25X_ChipErase);         //发送片擦除命令  
 391   1        SPI_FLASH_CS(1);                      //取消片选            
 392   1        SpiFlashWaitBusy();                   //等待芯片擦除结束
 393   1        //uart1_send_str("Chip has been erased.\r\n");
 394   1      } 
 395          
 396          /***********************************************
 397            函数名称：SpiFlashWaitBusy() 
 398            功能介绍：等待空闲
 399            函数参数：无
 400            返回值：  无
 401           ***********************************************/
 402          void SpiFlashWaitBusy(void) {   
 403   1        while((SpiFlashReadSR()&0x01)==0x01);  // 等待BUSY位清空
 404   1      }  
 405          
 406          /***********************************************
 407            函数名称：SpiFlashPowerDown() 
 408            功能介绍：进入掉电模式
 409            函数参数：无
 410            返回值：  无
 411           ***********************************************/
 412          void SpiFlashPowerDown(void) { 
 413   1        SPI_FLASH_CS(0);                       //使能器件   
 414   1        SpiWriteRead(W25X_PowerDown);          //发送掉电命令  
 415   1        SPI_FLASH_CS(1);                       //取消片选             
 416   1        _delay_us(3);                           //等待TPD  
 417   1      }
 418          
 419          /***********************************************
 420            函数名称：SpiFlashWakeUp() 
 421            功能介绍：唤醒
 422            函数参数：无
 423            返回值：  无
 424           ***********************************************/
 425          void SpiFlashWakeUp(void) {  
 426   1        SPI_FLASH_CS(0);                        //使能器件   
C51 COMPILER V9.60.0.0   Z_W25Q64                                                          07/09/2022 18:24:19 PAGE 8   

 427   1        SpiWriteRead(W25X_ReleasePowerDown);    //发送唤醒指令 
 428   1        SPI_FLASH_CS(1);                        //取消片选            
 429   1        _delay_us(3);                            //等待TRES1
 430   1      }
 431          
 432          
 433          
 434          
 435          
 436          
 437          
 438          
 439          
 440          
 441          
 442          
 443          
 444          
 445          
 446          
 447          
 448          
 449          
 450          
 451          
 452          
 453          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1400    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1      66
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
